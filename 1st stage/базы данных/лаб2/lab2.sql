/* Задание 1
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ДАТА.
Фильтры (AND): 
a) Н_ЛЮДИ.ОТЧЕСТВО < Георгиевич.
b) Н_СЕССИЯ.ДАТА = 2002-01-04.
c) Н_СЕССИЯ.ДАТА = 2002-01-04.
Вид соединения: LEFT JOIN.
Решение: */

SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ДАТА 
FROM Н_ЛЮДИ 
LEFT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД 
WHERE Н_ЛЮДИ.ОТЧЕСТВО < 'Георгиевич' AND Н_СЕССИЯ.ДАТА = '2002-01-04';
 
/* Задание 2
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ИД.
Фильтры (AND): 
a) Н_ЛЮДИ.ИМЯ = Ярослав.
b) Н_ВЕДОМОСТИ.ДАТА < 2022-06-08.
Вид соединения: LEFT JOIN.	
Решение: */

SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ИД 
FROM Н_ЛЮДИ 
LEFT JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД 
LEFT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД 
WHERE Н_ЛЮДИ.ИМЯ = 'Ярослав' AND Н_ВЕДОМОСТИ.ДАТА < '2022-06-08';

/* Задание 3
Вывести число студентов группы 3102, которые младше 20 лет. Ответ должен содержать только одно число.
Решение: */

SELECT COUNT(*) FROM Н_ЛЮДИ
LEFT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД  = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '3102' AND Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ < '2003-04-13';

/* Задание 4
Найти группы, в которых в 2011 году было менее 10 обучающихся студентов на ФКТИУ. Для реализации использовать подзапрос.
Решение: */

SELECT ГРУППА
FROM Н_УЧЕНИКИ
WHERE ПЛАН_ИД IN (SELECT Н_ПЛАНЫ.ИД FROM Н_ПЛАНЫ INNER JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ LIKE 'КТиУ'     
AND Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД LIKE '%2011%')
GROUP BY ГРУППА
HAVING COUNT(ИД) < 10;

/* Задание 5
Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не меньше средней оценк(е|и) в группе 3100.
Решение: */

SELECT ИМЯ, ФАМИЛИЯ, СРЕДНЯЯ_ОЦЕНКА FROM Н_ЛЮДИ 
INNER JOIN (
SELECT AVG(CAST(ОЦЕНКА AS INT) ) AS СРЕДНЯЯ_ОЦЕНКА, ЧЛВК_ИД AS ЧЛВК_ИД_ВЕД FROM Н_ВЕДОМОСТИ
INNER JOIN (SELECT ГРУППА, ЧЛВК_ИД AS ЧЛВК_ИД_УЧ FROM Н_УЧЕНИКИ) AS STUD ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = STUD.ЧЛВК_ИД_УЧ 
WHERE STUD.ГРУППА = '4100' AND ОЦЕНКА IN ('2', '3', '4', '5') GROUP BY ЧЛВК_ИД
) AS AVG_ID ON Н_ЛЮДИ.ИД = AVG_ID.ЧЛВК_ИД_ВЕД
WHERE СРЕДНЯЯ_ОЦЕНКА >= (
SELECT AVG(CAST(ОЦЕНКА AS INT) ) FROM Н_ВЕДОМОСТИ 
INNER JOIN (SELECT ГРУППА, ЧЛВК_ИД FROM Н_УЧЕНИКИ) AS STUD ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = STUD.ЧЛВК_ИД 
WHERE STUD.ГРУППА = '3100' AND ОЦЕНКА IN ('2', '3', '4', '5')
);

/* Задание 6
Получить список студентов, отчисленных после первого сентября 2012 года с заочной формы обучения. В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер пункта приказа;
Для реализации использовать подзапрос с EXISTS.
Решение: */

SELECT Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.СОСТОЯНИЕ, Н_ПЛАНЫ.ДАТА_УТВЕРЖДЕНИЯ AS Приказ FROM Н_ЛЮДИ JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД JOIN Н_УЧЕНИКИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД WHERE EXISTS ( SELECT 1 FROM Н_ОБУЧЕНИЯ JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД WHERE Н_ПЛАНЫ.ДАТА_УТВЕРЖДЕНИЯ > '2012-09-01' AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная' AND Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл' AND Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД );

/* Задание 7
Вывести список людей, не являющихся или не являвшихся студентами СПбГУ ИТМО (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ). В запросе нельзя использовать DISTINCT.
Решение: */

SELECT *
FROM Н_ЛЮДИ
LEFT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД WHERE ЧЛВК_ИД IS NULL;

/* Дополнительное задание
Определить какие предметы ведут люди, не являющиеся студентами СПбГУ ИМТО.
Решение: */

WITH OOO AS (SELECT Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФАМИЛИЯ FROM Н_ЛЮДИ LEFT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД WHERE ЧЛВК_ИД IS NULL ORDER BY Н_ЛЮДИ.ФАМИЛИЯ)
SELECT * FROM Н_ЛЮДИ, Н_ДИСЦИПЛИНЫ
LEFT JOIN OOO ON Н_ДИСЦИПЛИНЫ.КТО_СОЗДАЛ = OOO.ИД;
